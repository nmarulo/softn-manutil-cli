package %1$s#{onlyPackage};

import java.io.File;
import java.io.Serializable;
import java.net.URI;
import %6$s;
import my.example#{classWithPackage};
import my.example.two#{onlyPackage}.SoftN#{className}Red;
import %8$s;

@Deprecated
public class #{classNameFinal} extends File implements Serializable {
    
    private %7$s myTestClass;
    private static #{classNameFinal} INSTANCE;

    public #{classNameFinal}(){
        //constructor
    }

    public static #{classNameFinal} getInstance(){
        if(INSTANCE == null){
            INSTANCE = new #{classNameFinal}();
        }

        return INSTANCE;
    }

    public void FirstMethod() {
        System.out.println("class name \"#{className}\"");
        System.out.println("class with package \"#{classWithPackage}\"");
        System.out.println("class name final \"#{classNameFinal}\"");
        System.out.println("only package \"#{onlyPackage}\"");
        System.out.println("package separator \"#{packageSeparator}\"");
        System.out.println("class name lower \"#{classNameLower}\"");
        System.out.println("class name final lower \"#{classNameFinalLower}\"");
    }
    
    public %2$s(String pathname) {
        super(pathname);
    }
    
    public %3$s(String parent, String child) {
        super(parent, child);
    }
    
    public %4$s(File parent, String child) {
        super(parent, child);
    }
    
    public %5$s(URI uri) {
        super(uri);
    }
}
